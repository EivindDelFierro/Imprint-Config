#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    chosen { zmk,matrix-transform = &imprint_function_row_full_bottom_row; };

    combos {
        compatible = "zmk,combos";

        f1_default {
            bindings = <&kp F1>;
            key-positions = <81 0>;
            layers = <0 1>;
            timeout-ms = <1000>;
            require-prior-idle-ms = <1000>;
        };

        LayoutSwitch {
            bindings = <&tog 1>;
            key-positions = <76 81>;
            timeout-ms = <1000>;
            require-prior-idle-ms = <1000>;
            layers = <0 1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESC    &kp F2  &kp F3        &kp F4    &kp F5   &kp F6                    &kp F7        &kp F8         &kp F9        &kp F10   &kp F11   &kp F12
&kp EQUAL  &kp N1  &kp N2        &kp N3    &kp N4   &kp N5                    &kp N6        &kp N7         &kp N8        &kp N9    &kp N0    &kp MINUS
&kp TAB    &kp Q   &kp W         &kp E     &kp R    &kp T                     &kp Y         &kp U          &kp I         &kp O     &kp P     &kp BSLH
&kp LCTRL  &kp A   &kp S         &kp D     &kp F    &kp G                     &kp H         &kp J          &kp K         &kp L     &kp SEMI  &kp SQT
&kp LSHFT  &kp Z   &kp X         &kp C     &kp V    &kp B                     &kp N         &kp M          &kp COMMA     &kp DOT   &kp FSLH  &kp RSHFT
&trans     &trans  &kp LEFT_WIN  &kp LALT  &trans                                           &trans         &kp LBKT      &kp RBKT  &trans    &trans
                                           &kp RET  &kp DEL    &kp LG(TAB)    &kp GRAVE     &kp BACKSPACE  &kp SPACE
                                           &mo 2    &kp LC(Z)  &mo 3          &kp CAPSLOCK  &kp LC(Y)      &kp LEFT_ALT
            >;
        };

        Colemak {
            bindings = <
&kp ESC    &kp F2  &kp F3        &kp F4    &kp F5   &kp F6                    &kp F7        &kp F8         &kp F9        &kp F10   &kp F11        &kp F12
&kp EQUAL  &kp N1  &kp N2        &kp N3    &kp N4   &kp N5                    &kp N6        &kp N7         &kp N8        &kp N9    &kp N0         &kp MINUS
&kp TAB    &kp Q   &kp W         &kp F     &kp P    &kp B                     &kp J         &kp L          &kp U         &kp Y     &kp SEMICOLON  &kp BSLH
&kp LCTRL  &kp A   &kp R         &kp S     &kp T    &kp G                     &kp M         &kp N          &kp E         &kp I     &kp O          &kp SQT
&kp LSHFT  &kp X   &kp C         &kp D     &kp V    &kp Z                     &kp K         &kp H          &kp COMMA     &kp DOT   &kp FSLH       &kp RSHFT
&trans     &trans  &kp LEFT_WIN  &kp LALT  &trans                                           &trans         &kp LBKT      &kp RBKT  &trans         &trans
                                           &kp RET  &kp DEL    &kp LG(TAB)    &kp GRAVE     &kp BACKSPACE  &kp SPACE
                                           &mo 2    &kp LC(Z)  &mo 3          &kp CAPSLOCK  &kp LC(Y)      &kp LEFT_ALT
            >;
        };

        Numpad_Nav_Layer {
            bindings = <
&trans  &trans  &trans          &trans          &trans           &trans            &trans  &trans        &trans        &trans        &trans  &trans
&trans  &trans  &trans          &trans          &trans           &trans            &trans  &trans        &trans        &trans        &trans  &trans
&trans  &trans  &kp HOME        &kp UP_ARROW    &kp END          &trans            &trans  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &trans  &trans
&trans  &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans            &trans  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &trans  &trans
&trans  &trans  &trans          &trans          &trans           &trans            &trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans
&trans  &trans  &trans          &trans          &trans                                     &trans        &kp NUMBER_0  &trans        &trans  &trans
                                                &trans           &trans  &trans    &trans  &trans        &trans
                                                &trans           &trans  &trans    &trans  &trans        &trans
            >;
        };

        Keyboard_Control_Layer {
            bindings = <
&trans       &trans        &trans        &trans        &trans           &trans                  &trans  &trans           &trans           &trans           &trans           &trans
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3     &bt BT_SEL 4            &trans  &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &trans           &trans           &trans
&sys_reset   &trans        &trans        &trans        &trans           &trans                  &trans  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &sys_reset
&bootloader  &trans        &kp C_MUTE    &kp C_VOL_DN  &kp C_VOLUME_UP  &trans                  &trans  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &bootloader
&to 5        &trans        &trans        &trans        &trans           &trans                  &trans  &trans           &trans           &trans           &trans           &to 5
&to 5        &trans        &trans        &trans        &trans                                           &trans           &trans           &trans           &trans           &to 5
                                                       &trans           &trans        &trans    &trans  &trans           &trans
                                                       &trans           &trans        &trans    &trans  &trans           &trans
            >;
        };

        Auto_Mouse_Layer {
            bindings = <
&trans  &trans  &trans     &trans     &trans     &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans     &trans     &trans     &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans     &trans     &trans     &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &mkp RCLK  &mkp MCLK  &mkp LCLK  &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans     &trans     &trans     &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans     &trans     &trans                               &trans  &trans  &trans  &trans  &trans
                                      &trans     &trans  &trans    &trans  &trans  &trans
                                      &trans     &trans  &trans    &trans  &trans  &trans
            >;
        };

        factory_test {
            bindings = <
&kp N0  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5            &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &kp N1
&kp N2  &kp N3  &kp N4  &kp N5  &kp N6  &kp N7            &kp N8  &kp N9  &kp N0  &kp N1  &kp N2  &kp N3
&kp N4  &kp N5  &kp N6  &kp N7  &kp N8  &kp N9            &kp N0  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5
&kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &kp N1            &kp N2  &kp N3  &kp N4  &kp N5  &kp N6  &kp N7
&kp N8  &kp N9  &kp N0  &kp N1  &kp N2  &kp N3            &kp N4  &kp N5  &kp N6  &kp N7  &kp N8  &kp N9
&kp N0  &kp N1  &kp N2  &kp N3  &kp N4                            &kp N6  &kp N7  &kp N8  &kp N9  &kp N0
                                &kp N1  &kp N2  &kp N3    &kp N4  &kp N5  &kp N6
                                &kp N7  &kp N8  &kp N9    &kp N0  &kp N1  &kp N2
            >;
        };
    };
};

//right hand trackball configuration

&trackball_peripheral_listener {
    input-processors =
        // this gets it to the default installation orientation (Remember to update the semicolons and commas after list items),,
        <&zip_xy_transform INPUT_TRANSFORM_XY_SWAP>,
        // activate layer 3 within 500ms of the trackball moving,,
        <&zip_temp_layer 4 1000>;
};

//left hand trackball configuration

&trackball_central_listener {
    input-processors =
        // this gets it to the default installation orientation,,
        <&zip_xy_transform INPUT_TRANSFORM_XY_SWAP>,
        // multiply sensitivity by 1, divide by 3 (make it slower for scrolling),,
        <&zip_xy_scaler 1 12>,
        // make this trackball output scrolling events by default instead of cursor movement,,
        <&zip_xy_to_scroll_mapper>,
        // invert vertical scrolling so that the view moves in the same direction as the top of the trackball.,,
        <&zip_scroll_transform INPUT_TRANSFORM_Y_INVERT>;
};
